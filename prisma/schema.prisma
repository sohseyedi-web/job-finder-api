generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  OWNER
  ADMIN
  EMPLOYEE
}

model User {
  id        String   @id @default(cuid())
  fullName  String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile?

  // Relations
  jobs         Job[]         @relation("UserJobs") // owner → Job
  applications Application[] @relation("UserApplications") // user → Application
  notifications Notification[] @relation("UserNotifications")
}

model Profile {
  id          String  @id @default(cuid())
  userId      String  @unique
  user        User    @relation(fields: [userId], references: [id])
  city        String?
  phoneNumber String?

  // USER
  jobTitle  String?
  resumeUrl String?

  // OWNER
  companyName  String?
  companyCity  String?
  address      String?
  companyPhone String?
  website      String?
  logoUrl      String?
  ownerPhone   String?
}

model Job {
  id           String        @id @default(cuid())
  title        String
  description  String
  experience   String
  salary       String
  city         String
  jobType      String
  category     String
  ownerId      String
  owner        User          @relation("UserJobs", fields: [ownerId], references: [id])
  applications Application[]
  isActive     Boolean       @default(false)
  expiresAt    DateTime      @default(now())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Application {
  id        String   @id @default(cuid())
  jobId     String
  job       Job      @relation(fields: [jobId], references: [id])
  userId    String
  user      User     @relation("UserApplications", fields: [userId], references: [id])
  fullName  String
  email     String
  resumeUrl String
  status    Int      @default(0) //0: Pending, 1: Reviewed, 2: Rejected, 3: Interview approved
  createdAt DateTime @default(now())
}

model Notification {
  id          String   @id @default(cuid())
  title       String
  message     String
  type        NotificationType
  recipient   User     @relation("UserNotifications", fields: [recipientId], references: [id])
  recipientId String
  senderId    String
  senderName  String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum NotificationType {
  SYSTEM
  JOB
  TICKET
}
